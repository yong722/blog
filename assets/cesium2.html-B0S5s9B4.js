import{_ as s,c as a,a as t,o as p}from"./app-K4CeAmvM.js";const e={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[t(`<ul><li>导入3D tiles</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	<span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			Cesium<span class="token punctuation">.</span>Cesium3DTileset<span class="token punctuation">.</span><span class="token function">fromUrl</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>url<span class="token punctuation">)</span></span>
<span class="line">				<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tileset</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">let</span> cameraOffset <span class="token operator">=</span> data<span class="token punctuation">.</span>cameraOffset <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">					tileset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">translation</span><span class="token punctuation">(</span>tileset<span class="token punctuation">,</span> data<span class="token punctuation">.</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 模型平移</span></span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>scale<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						tileset <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>tileset<span class="token punctuation">,</span> data<span class="token punctuation">.</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 模型缩放</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">					<span class="token keyword">this</span><span class="token punctuation">.</span>viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tileset<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">const</span> center <span class="token operator">=</span> tileset<span class="token punctuation">.</span>boundingSphere<span class="token punctuation">.</span>center<span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>lookAt<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 相机视觉是否绑定模型</span></span>
<span class="line">						<span class="token keyword">this</span><span class="token punctuation">.</span>viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span>center<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian3</span><span class="token punctuation">(</span></span>
<span class="line">							cameraOffset<span class="token punctuation">.</span>x <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">							cameraOffset<span class="token punctuation">.</span>y <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">							cameraOffset<span class="token punctuation">.</span>z <span class="token operator">||</span> <span class="token number">100</span></span>
<span class="line">						<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">					<span class="token function">resolve</span><span class="token punctuation">(</span>tileset<span class="token punctuation">)</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">				<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">					console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to load 3D Tiles:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导入GLTF</li></ul><div class="language-JS line-numbers-mode" data-highlighter="prismjs" data-ext="JS" data-title="JS"><pre><code><span class="line">	addGltf(url){</span>
<span class="line">        // fromGltf-fromGltfAsync</span>
<span class="line">        return viewer.scene.primitives.add(</span>
<span class="line">          Cesium.Model.fromGltf({</span>
<span class="line">            url: url,</span>
<span class="line">            show: true,</span>
<span class="line">            scale: 0.001,</span>
<span class="line">            maximumScale: 1,</span>
<span class="line">            loader: &quot;url-loader&quot;,</span>
<span class="line">          })</span>
<span class="line">        );</span>
<span class="line">    }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模型缩放</li></ul><div class="language-JS line-numbers-mode" data-highlighter="prismjs" data-ext="JS" data-title="JS"><pre><code><span class="line">	scale(tileset, scale) {</span>
<span class="line">		if (scale &lt;= 0) return tileset;</span>
<span class="line">		// 2)得到外包围球中心点坐标</span>
<span class="line">		let cartographic = Cesium.Cartographic.fromCartesian(</span>
<span class="line">			tileset.boundingSphere.center</span>
<span class="line">		);</span>
<span class="line">		// 坐标变换为 Cartesian3 类型</span>
<span class="line">		let surface = Cesium.Cartesian3.fromRadians(</span>
<span class="line">			cartographic.longitude,</span>
<span class="line">			cartographic.latitude,</span>
<span class="line">			cartographic.height</span>
<span class="line">		);</span>
<span class="line">		// 3)以提供的原点为中心计算 4＊4 变换矩阵</span>
<span class="line">		let m = Cesium.Transforms.eastNorthUpToFixedFrame(surface);</span>
<span class="line">		// 4)记录模型初始变换矩阵，放大和缩小均以此为基础</span>
<span class="line">		let mStar = tileset._root.transform;</span>
<span class="line">		// 5)定义缩放比例</span>
<span class="line">		const _scale = Cesium.Matrix4.fromUniformScale(scale);</span>
<span class="line">		// 6)调用缩放函数</span>
<span class="line">		Cesium.Matrix4.multiply(mStar, _scale, m);</span>
<span class="line">		tileset._root.transform = m;</span>
<span class="line">		return tileset</span>
<span class="line">	}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模型平移</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	<span class="token function">translation</span><span class="token punctuation">(</span><span class="token parameter">tileset<span class="token punctuation">,</span> offset</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>offset<span class="token punctuation">)</span> <span class="token keyword">return</span> tileset<span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 获取3DTileset模型的外包围球中心点坐标</span></span>
<span class="line">		<span class="token keyword">let</span> cartographic <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartographic<span class="token punctuation">.</span><span class="token function">fromCartesian</span><span class="token punctuation">(</span></span>
<span class="line">			tileset<span class="token punctuation">.</span>boundingSphere<span class="token punctuation">.</span>center</span>
<span class="line">		<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> surface <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromRadians</span><span class="token punctuation">(</span></span>
<span class="line">			cartographic<span class="token punctuation">.</span>longitude<span class="token punctuation">,</span></span>
<span class="line">			cartographic<span class="token punctuation">.</span>latitude<span class="token punctuation">,</span></span>
<span class="line">			<span class="token number">0</span></span>
<span class="line">		<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 计算偏移后的坐标</span></span>
<span class="line">		<span class="token keyword">let</span> offsetHeight <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromRadians</span><span class="token punctuation">(</span></span>
<span class="line">			cartographic<span class="token punctuation">.</span>longitude <span class="token operator">+</span> <span class="token punctuation">(</span>offset<span class="token punctuation">.</span>x <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">			cartographic<span class="token punctuation">.</span>latitude <span class="token operator">+</span> <span class="token punctuation">(</span>offset<span class="token punctuation">.</span>y <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">(</span>offset<span class="token punctuation">.</span>z <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> translation <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span></span>
<span class="line">			offsetHeight<span class="token punctuation">,</span></span>
<span class="line">			surface<span class="token punctuation">,</span></span>
<span class="line">			<span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian3</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 创建一个表示转换的Matrix4</span></span>
<span class="line">		tileset<span class="token punctuation">.</span>modelMatrix <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Matrix4<span class="token punctuation">.</span><span class="token function">fromTranslation</span><span class="token punctuation">(</span>translation<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> tileset<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>模型旋转</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">	<span class="token function">rotation</span><span class="token punctuation">(</span><span class="token parameter">tileset<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>params<span class="token punctuation">)</span> <span class="token keyword">return</span> tileset<span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 创建绕 x、y、z 轴旋转的矩阵</span></span>
<span class="line">		<span class="token keyword">let</span> rotationX <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Matrix3<span class="token punctuation">.</span><span class="token function">fromRotationX</span><span class="token punctuation">(</span>Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>x <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 绕 X 轴旋转 45 度</span></span>
<span class="line">		<span class="token keyword">let</span> rotationY <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Matrix3<span class="token punctuation">.</span><span class="token function">fromRotationY</span><span class="token punctuation">(</span>Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>y <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 绕 Y 轴旋转 30 度</span></span>
<span class="line">		<span class="token keyword">let</span> rotationZ <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Matrix3<span class="token punctuation">.</span><span class="token function">fromRotationZ</span><span class="token punctuation">(</span>Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>z <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 绕 Z 轴旋转 60 度</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 组合旋转矩阵，注意矩阵乘法的顺序（从右到左应用）</span></span>
<span class="line">		<span class="token keyword">let</span> rotationMatrix <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Matrix3<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span>rotationZ<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		Cesium<span class="token punctuation">.</span>Matrix3<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>rotationMatrix<span class="token punctuation">,</span> rotationY<span class="token punctuation">,</span> rotationMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		Cesium<span class="token punctuation">.</span>Matrix3<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>rotationMatrix<span class="token punctuation">,</span> rotationX<span class="token punctuation">,</span> rotationMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 将旋转矩阵转换为 4x4 矩阵，并应用到 tileset 的 modelMatrix</span></span>
<span class="line">		<span class="token keyword">let</span> modelMatrix <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Transforms<span class="token punctuation">.</span><span class="token function">eastNorthUpToFixedFrame</span><span class="token punctuation">(</span>Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		Cesium<span class="token punctuation">.</span>Matrix4<span class="token punctuation">.</span><span class="token function">fromRotationTranslation</span><span class="token punctuation">(</span>rotationMatrix<span class="token punctuation">,</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">,</span> modelMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		tileset<span class="token punctuation">.</span>modelMatrix <span class="token operator">=</span> modelMatrix<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> tileset</span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const o=s(e,[["render",l],["__file","cesium2.html.vue"]]),u=JSON.parse('{"path":"/blogs/2025/cesium/cesium2.html","title":"cesium导入模型","lang":"en-US","frontmatter":{"title":"cesium导入模型","date":"2025-01-13T00:00:00.000Z","tags":["cesium"],"category":["cesium"],"categories":[]},"headers":[],"git":{"createdTime":1737018220000,"updatedTime":1737018220000,"contributors":[{"name":"zy","email":"848175192@qqcom","commits":1}]},"filePathRelative":"blogs/2025/cesium/cesium2.md"}');export{o as comp,u as data};
